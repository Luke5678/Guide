@rendermode InteractiveWebAssembly

@implements IDisposable

@inject NavigationManager NavigationManager

<AuthorizeView>
    <div class="container d-flex flex-wrap justify-content-center gap-2 my-2">
        <div class="btn btn-danger">
            Wyrenderowano przez: @_handler
        </div>
        <a class="btn btn-primary" href="/admin">Admin</a>
        <form action="Account/Logout" method="post">
            <AntiforgeryToken/>
            <input type="hidden" name="ReturnUrl" value="@_currentUrl"/>
            <button type="submit" class="btn btn-primary">
                Wyloguj
            </button>
        </form>
    </div>
</AuthorizeView>

@code {
    private string? _currentUrl;
    private string _handler = "";

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;


        if (OperatingSystem.IsBrowser())
        {
            _handler = "WASM";
        }
        else
        {
            _handler = "Server";
        }
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}