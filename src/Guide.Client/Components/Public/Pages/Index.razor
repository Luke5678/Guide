@page "/"
@rendermode InteractiveWebAssembly

@using Guide.Shared.Common.Dtos
@using Guide.Shared.Common.Interfaces

@inject IAttractionService AttractionService
@inject PersistentComponentState AppState
@implements IDisposable

<PageTitle>Przewodnik Opolskie</PageTitle>

<section class="mb-5">
    <h2>Popularne</h2>
    <div class="row">
        @foreach (var attraction in _attractions)
        {
            <div class="col-md-3 mb-4">
                <div class="card">
                    @if (attraction.MainImage != null)
                    {
                        <img src="@attraction.MainImage.Url" class="card-img-top" alt="@attraction.Name">
                    }
                    <div class="card-body">
                        <h5 class="card-title">@attraction.Name</h5>
                        <p class="card-text">Krótki opis atrakcji.</p>
                        <a href="#" class="btn btn-primary">Czytaj więcej</a>
                    </div>
                </div>
            </div>
        }
    </div>
</section>

@code {
    private PersistingComponentStateSubscription _subscription;
    private List<AttractionDto> _attractions = [];

    protected override async Task OnInitializedAsync()
    {
        _subscription = AppState.RegisterOnPersisting(Persist);

        var foundInState = AppState.TryTakeFromJson<List<AttractionDto>>("attractions", out var attractions);

        _attractions = (foundInState
            ? attractions
            : await AttractionService.Get(limit: 4))!;
    }

    private Task Persist()
    {
        AppState.PersistAsJson("attractions", _attractions);
        return Task.CompletedTask;
    }

    public void Dispose()
    {
        _subscription.Dispose();
    }

}