@page "/admin/categories/update/{id:int}"
@rendermode InteractiveServer

@using Guide.Application.Features.Categories.Commands.UpdateCategory
@using Guide.Application.Features.Categories.Queries.GetCategory

@inject IMediator Mediator
@inject NavigationManager NavigationManager

<PageTitle>Kategorie - Panel Administratora</PageTitle>

@if (_request != null)
{
    <div class="row mb-3">
        <div class="col"></div>
        <div class="col-12 col-md-2">
            <LanguageSwitcher/>
        </div>
    </div>
    <EditForm Model="_request" OnValidSubmit="HandleSubmit">
        <FluentValidationValidator/>
        <div class="mb-3">
            <label class="form-label">Nazwa</label>
            <InputText class="form-control" @bind-Value="_request.Name">@_request.Name</InputText>
            <ValidationMessage For="() => _request.Name"/>
        </div>
        <button type="submit" class="btn btn-primary">Zapisz</button>
    </EditForm>
}

@code {
    [Parameter] public int? Id { get; set; }

    UpdateCategoryCommand? _request;
    private readonly string _language = CultureInfo.CurrentCulture.TwoLetterISOLanguageName;

    protected override async Task OnInitializedAsync()
    {
        if (!Id.HasValue)
        {
            NavigationManager.NavigateTo("/admin/categories");
            return;
        }

        var category = await Mediator.Send(new GetCategoryQuery { Id = Id.Value, LanguageCode = _language });
        if (category == null)
        {
            NavigationManager.NavigateTo("/admin/categories");
            return;
        }

        _request = new UpdateCategoryCommand
        {
            Id = category.Id,
            Name = category.Name,
            LanguageCode = _language
        };
    }

    async Task HandleSubmit()
    {
        await Mediator.Send(_request!);
        NavigationManager.NavigateTo("/admin/categories");
    }

}