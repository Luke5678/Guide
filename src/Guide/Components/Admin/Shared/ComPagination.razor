@if (PagesAmount > 1 && CurrentPage > 0)
{
    <div class="flex items-center justify-between mt-6">
        <button @onclick="Previous"
                class="flex items-center px-5 py-2 text-sm text-gray-700 capitalize transition-colors duration-200 bg-white border rounded-md gap-x-2 hover:bg-gray-100">
            <img src="arrow-left.svg" alt="Previous" class="w-5 h-5">
            <span>
                Wstecz
            </span>
        </button>

        <div class="items-center hidden md:flex gap-x-3">
            @foreach (var num in GetPageNumbers())
            {
                if (num == CurrentPage)
                {
                    <a href="#" class="px-2 py-1 text-sm text-blue-500 rounded-md bg-blue-100/60">
                        @num
                    </a>
                }
                else if (num == -1)
                {
                    <div @onclick="ShowModal" class="px-2 py-1 text-sm rounded-md hover:bg-gray-100 cursor-pointer">
                        ...
                    </div>
                }
                else
                {
                    <a href="#" class="px-2 py-1 text-sm rounded-md hover:bg-gray-100">
                        @num
                    </a>
                }
            }
        </div>

        <button @onclick="Next"
                class="flex items-center px-5 py-2 text-sm text-gray-700 capitalize transition-colors duration-200 bg-white border rounded-md gap-x-2 hover:bg-gray-100">
            <span>
                Dalej
            </span>
            <img src="arrow-left.svg" alt="Next" class="w-5 h-5 rotate-180">
        </button>
    </div>

    <ComModal Center="true" @ref="_modal">
        <TitleContent>
            <div>Wprowadź numer strony</div>
        </TitleContent>
        <BodyContent>
            <div class="flex justify-center">
                <div class="max-w-[150px]">
                    <label for="nr_strony">Numer strony</label>
                    <input type="number" id="nr_strony" name="nr_strony" @bind="_pageNumberInput">
                </div>
            </div>
        </BodyContent>
        <FooterContent>
            <ComButton OnClickCallback="SetPage">
                Potwierdź
            </ComButton>
        </FooterContent>
    </ComModal>
}

@code {
    [Parameter] public int CurrentPage { get; set; }
    [Parameter] public int PagesAmount { get; set; }

    [Parameter] public EventCallback<int> OnPageChanged { get; set; }

    private ComModal? _modal;
    private int _pageNumberInput;

    async Task Previous()
    {
        await OnPageChanged.InvokeAsync(CurrentPage == 1 ? PagesAmount : CurrentPage - 1);
    }

    async Task Next()
    {
        await OnPageChanged.InvokeAsync(CurrentPage == PagesAmount ? 1 : CurrentPage + 1);
    }

    async Task SetPage()
    {
        var newPage = _pageNumberInput > 0 && _pageNumberInput <= PagesAmount
            ? _pageNumberInput
            : _pageNumberInput > PagesAmount
                ? PagesAmount
                : 1;
        _modal?.Hide();
        await OnPageChanged.InvokeAsync(newPage);
    }

    void ShowModal()
    {
        _pageNumberInput = CurrentPage;
        _modal?.Show();
    }

    private int[] GetPageNumbers()
    {
        if (PagesAmount < 7)
        {
            return Enumerable.Range(1, PagesAmount).ToArray();
        }

        var numbers = new List<int> { 1 };

        if (CurrentPage < 4)
        {
            numbers.AddRange([2, 3, 4, 5, -1, PagesAmount]);
        }
        else if (CurrentPage > PagesAmount - 4)
        {
            numbers.Add(-1);
            numbers.AddRange(Enumerable.Range(PagesAmount - 4, 5));
        }
        else
        {
            numbers.Add(-1);
            numbers.AddRange(Enumerable.Range(CurrentPage - 1, 3));
            numbers.AddRange([-1, PagesAmount]);
        }

        return numbers.ToArray();
    }

}