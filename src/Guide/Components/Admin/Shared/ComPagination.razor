@if (PagesAmount > 1 && CurrentPage > 0)
{
    <ul class="pagination justify-content-center">
        <li class="page-item">
            <div class="page-link" @onclick="Previous" @onclick:preventDefault>
                <span aria-hidden="true">&laquo;</span>
            </div>
        </li>

        @foreach (var num in GetPageNumbers())
        {
            if (num == CurrentPage)
            {
                <li class="page-item active">
                    <div class="page-link" @onclick="() => SetPage(num)" @onclick:preventDefault>
                        @num
                    </div>
                </li>
            }
            else if (num == -1)
            {
                <li class="page-item">
                    <div class="page-link" data-bs-toggle="modal" data-bs-target="#pagination-modal">
                        ...
                    </div>
                </li>
            }
            else
            {
                <li class="page-item">
                    <div class="page-link" @onclick="() => SetPage(num)" @onclick:preventDefault>
                        @num
                    </div>
                </li>
            }
        }

        <li class="page-item">
            <div class="page-link" @onclick="Next" @onclick:preventDefault>
                <span aria-hidden="true">&raquo;</span>
            </div>
        </li>
    </ul>

    <div class="modal fade" id="pagination-modal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5">Wprowadź numer strony</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Zamknij"></button>
                </div>
                <div class="modal-body">
                    <div>
                        <label for="nr_strony" class="col-form-label">Numer strony</label>
                        <input type="number" id="nr_strony" name="nr_strony" @bind="_pageNumberInput"
                               class="form-control">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        Anuluj
                    </button>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="() => SetPage(_pageNumberInput)">
                        Potwierdź
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int CurrentPage { get; set; }
    [Parameter] public int PagesAmount { get; set; }

    [Parameter] public EventCallback<int> OnPageChanged { get; set; }

    private int _pageNumberInput;

    async Task Previous()
    {
        await OnPageChanged.InvokeAsync(CurrentPage == 1 ? PagesAmount : CurrentPage - 1);
    }

    async Task Next()
    {
        await OnPageChanged.InvokeAsync(CurrentPage == PagesAmount ? 1 : CurrentPage + 1);
    }

    async Task SetPage(int page)
    {
        var newPage = page > 0 && page <= PagesAmount
            ? page
            : page > PagesAmount
                ? PagesAmount
                : 1;
        await OnPageChanged.InvokeAsync(newPage);
    }

    private int[] GetPageNumbers()
    {
        if (PagesAmount < 7)
        {
            return Enumerable.Range(1, PagesAmount).ToArray();
        }

        var numbers = new List<int> { 1 };

        if (CurrentPage < 5)
        {
            numbers.AddRange([2, 3, 4, 5, -1, PagesAmount]);
        }
        else if (CurrentPage > PagesAmount - 4)
        {
            numbers.Add(-1);
            numbers.AddRange(Enumerable.Range(PagesAmount - 4, 5));
        }
        else
        {
            numbers.Add(-1);
            numbers.AddRange(Enumerable.Range(CurrentPage - 1, 3));
            numbers.AddRange([-1, PagesAmount]);
        }

        return numbers.ToArray();
    }

}